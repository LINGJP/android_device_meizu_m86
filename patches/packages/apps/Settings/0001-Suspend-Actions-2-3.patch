From 22d9d59c4683119dea8e5780aed0d9a6edeac698 Mon Sep 17 00:00:00 2001
From: faust93 <monumentum@gmail.com>
Date: Wed, 1 Mar 2017 18:50:33 +0300
Subject: [PATCH] Suspend Actions [2/3]

---
 res/values-ru/rr_strings.xml                       |  20 ++
 res/values/rr_strings.xml                          |  21 ++
 res/xml/rr_misc.xml                                |   7 +
 res/xml/rr_screen_state_toggles.xml                |  89 ++++++++
 .../settings/rr/fragments/ScreenStateToggles.java  | 248 +++++++++++++++++++++
 6 files changed, 392 insertions(+)
 create mode 100644 res/xml/rr_screen_state_toggles.xml
 create mode 100644 src/com/android/settings/rr/fragments/ScreenStateToggles.java

diff --git a/res/values-ru/rr_strings.xml b/res/values-ru/rr_strings.xml
index f522693..66f702f 100644
--- a/res/values-ru/rr_strings.xml
+++ b/res/values-ru/rr_strings.xml
@@ -1858,6 +1858,26 @@
   <string name="yes">Да</string>
   <string name="status_bar_battery_style_tile_title">Пользовательский стиль плитки батареи</string>
   <string name="status_bar_battery_style_tile_summary">Разрешить устанавливать тот же стиль значка батареи, что и в строке состояния</string>
+  <!-- Screen state service -->
+  <string name="screen_state_toggles_summary">@null</string>
+  <string name="screen_state_toggles_title">Действия в режиме ожидания</string>
+  <string name="screen_state_toggles_enable_title">Включить</string>
+  <string name="screen_state_toggles_enable_summary">Действия выполняемые при выключении экрана. При включении возвращается прежние состояния параметров.</string>
+  <string name="screen_state_toggles_mobile_title">Мобильные сети</string>
+  <string name="screen_state_toggles_location_title">Местоположение</string>
+  <string name="screen_state_toggles_twog">Использовать режим 2G</string>
+  <string name="screen_state_toggles_twog_summary">Режим передачи данных активной сети будет переключен в режим 2G</string>
+  <string name="screen_state_toggles_gps">Выключить GPS</string>
+  <string name="screen_state_toggles_gps_summary">Не использовать GPS при выключенном экране</string>
+  <string name="screen_state_toggles_mobile_data">Отключить мобильные данные</string>
+  <string name="screen_state_toggles_mobile_data_summary">Не использовать передачу данных при выключенном экране </string>
+  <string name="screen_state_off_delay_title">Отложить действия при выключении экрана</string>
+  <string name="screen_state_off_delay_summary">Отложить действия при выключении экране на указанное количество секунд</string>
+  <string name="screen_state_on_delay_title">Отложить действия при включении экрана</string>
+  <string name="screen_state_on_delay_summary">Отложить действия при включении экране на указанное количество секунд</string>
+  <string name="screen_state_toggles_wifi_title">Wi-Fi</string>
+  <string name="screen_state_toggles_wifi">Выключить Wi-Fi</string>
+  <string name="screen_state_toggles_wifi_summary">Принудительно отключать Wi-Fi при выключенном экране</string>
   <!-- Scrolling Animation Controls -->
   <string name="scrolling_title">Модификаторы прокрутки</string>
   <string name="scrolling_summary">Просмотр и изменение анимаций прокрутки</string>
diff --git a/res/values/rr_strings.xml b/res/values/rr_strings.xml
index 050212d..c761eab 100644
--- a/res/values/rr_strings.xml
+++ b/res/values/rr_strings.xml
@@ -2209,6 +2209,27 @@
     <string name="restarting_ui">Restarting UI\u2026</string>
     <string name="print_restart">Restart</string>
 
+    <!-- Screen state service -->
+    <string name="screen_state_toggles_summary">@null</string>
+    <string name="screen_state_toggles_title">Suspend Actions</string>
+    <string name="screen_state_toggles_enable_title">Enable</string>
+    <string name="screen_state_toggles_enable_summary">Actions will be executed on screen off. On screen on the previous state will be restored.</string>
+    <string name="screen_state_toggles_mobile_title">Mobile networks</string>
+    <string name="screen_state_toggles_location_title">Location</string>
+    <string name="screen_state_toggles_twog">Switch to 2G</string>
+    <string name="screen_state_toggles_twog_summary">Network mode will be switched to 2G on screen off</string>
+    <string name="screen_state_toggles_gps">Disable GPS</string>
+    <string name="screen_state_toggles_gps_summary">GPS based location service will be disabled on screen off</string>
+    <string name="screen_state_toggles_mobile_data">Disable mobile data</string>
+    <string name="screen_state_toggles_mobile_data_summary">Mobile data will be disabled on screen off</string>
+    <string name="screen_state_off_delay_title">Screen Off actions delay</string>
+    <string name="screen_state_off_delay_summary">Number of seconds to wait before performing actions after screen off</string>
+    <string name="screen_state_on_delay_title">Screen On actions delay</string>
+    <string name="screen_state_on_delay_summary">Number of seconds to wait before performing actions after screen on</string>
+    <string name="screen_state_toggles_wifi_title">WIFI</string>
+    <string name="screen_state_toggles_wifi">Disable Wi-Fi</string>
+    <string name="screen_state_toggles_wifi_summary">Forcibly disable Wi-Fi while screen is off</string>
+
     <!-- Dashboard options -->
     <string name="dashboard_category">Dashboard options</string>
     <string name="dashboard_suggestions_title">Suggestions</string>
diff --git a/res/xml/rr_misc.xml b/res/xml/rr_misc.xml
index cea07e0..60b52dc 100644
--- a/res/xml/rr_misc.xml
+++ b/res/xml/rr_misc.xml
@@ -104,6 +104,13 @@
             android:icon="@drawable/rr_alarmblocker_icon"
             android:fragment="com.android.settings.rr.AlarmBlocker" />
 
+        <!-- Screen state -->
+        <PreferenceScreen
+            android:key="screenstate_category"
+            android:title="@string/screen_state_toggles_title" 
+            android:fragment="com.android.settings.rr.fragments.ScreenStateToggles"
+            android:icon="@drawable/rr_power_icon" />
+
        <!-- System APP Remover -->
        <PreferenceScreen
             android:id="@+id/system_app_remover"
diff --git a/res/xml/rr_screen_state_toggles.xml b/res/xml/rr_screen_state_toggles.xml
new file mode 100644
index 0000000..4c65de1
--- /dev/null
+++ b/res/xml/rr_screen_state_toggles.xml
@@ -0,0 +1,89 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- Copyright (C) 2012 The CyanogenMod Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<PreferenceScreen
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:title="@string/screen_state_toggles_title"
+    xmlns:settings="http://schemas.android.com/apk/res/com.android.settings">
+
+    <SwitchPreference
+        android:key="screen_state_toggles_enable_key"
+        android:title="@string/screen_state_toggles_enable_title"
+        android:summary="@string/screen_state_toggles_enable_summary"
+        android:defaultValue="false"/>
+
+    <com.android.settings.rr.SeekBarPreference
+        android:key="screen_state_off_delay"
+        android:title="@string/screen_state_off_delay_title"
+        android:summary="@string/screen_state_off_delay_summary"
+        android:max="180"
+        settings:min="0"
+        settings:units="s"
+        android:persistent="false"
+        android:dependency="screen_state_toggles_enable_key" />
+
+    <com.android.settings.rr.SeekBarPreference
+        android:key="screen_state_on_delay"
+        android:title="@string/screen_state_on_delay_title"
+        android:summary="@string/screen_state_on_delay_summary"
+        android:max="180"
+        settings:min="0"
+        settings:units="s"
+        android:persistent="false"
+        android:dependency="screen_state_toggles_enable_key" />
+
+    <PreferenceCategory
+        android:key="screen_state_toggles_mobile_key"
+        android:title="@string/screen_state_toggles_mobile_title">
+
+       <com.android.settings.rr.Preferences.SystemSettingSwitchPreference
+            android:key="screen_state_toggles_twog"
+            android:title="@string/screen_state_toggles_twog"
+            android:summary="@string/screen_state_toggles_twog_summary"
+            android:defaultValue="false"/>
+
+       <com.android.settings.rr.Preferences.SystemSettingSwitchPreference
+            android:key="screen_state_toggles_mobile_data"
+            android:title="@string/screen_state_toggles_mobile_data"
+            android:summary="@string/screen_state_toggles_mobile_data_summary"
+            android:defaultValue="false"/>
+    </PreferenceCategory>
+
+    <PreferenceCategory
+        android:key="screen_state_toggles_location_key"
+        android:title="@string/screen_state_toggles_location_title">
+
+       <com.android.settings.rr.Preferences.SystemSettingSwitchPreference
+            android:key="screen_state_toggles_gps"
+            android:title="@string/screen_state_toggles_gps"
+            android:summary="@string/screen_state_toggles_gps_summary"
+            android:defaultValue="false"/>
+
+    </PreferenceCategory>
+
+    <PreferenceCategory
+        android:key="screen_state_toggles_wifi_key"
+        android:title="@string/screen_state_toggles_wifi_title">
+
+       <com.android.settings.rr.Preferences.SystemSettingSwitchPreference
+            android:key="screen_state_toggles_wifi"
+            android:title="@string/screen_state_toggles_wifi"
+            android:summary="@string/screen_state_toggles_wifi_summary"
+            android:defaultValue="false"/>
+
+    </PreferenceCategory>
+
+</PreferenceScreen>
\ No newline at end of file
diff --git a/src/com/android/settings/rr/fragments/ScreenStateToggles.java b/src/com/android/settings/rr/fragments/ScreenStateToggles.java
new file mode 100644
index 0000000..e113af7
--- /dev/null
+++ b/src/com/android/settings/rr/fragments/ScreenStateToggles.java
@@ -0,0 +1,248 @@
+/*
+ * Copyright (C) 2013 Android Open Kang Project
+ * Copyright (C) 2017 faust93 at monumentum@gmail.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.settings.rr.fragments;
+
+import android.os.Bundle;
+import android.content.ContentResolver;
+import android.content.res.Resources;
+import android.support.v7.preference.Preference;
+import android.support.v7.preference.PreferenceCategory;
+import android.support.v7.preference.PreferenceScreen;
+import android.support.v7.preference.Preference.OnPreferenceChangeListener;
+import android.support.v14.preference.SwitchPreference;
+import android.provider.Settings;
+import android.text.TextUtils;
+import android.view.View;
+
+import android.content.Intent;
+import android.util.Log;
+import android.net.ConnectivityManager;
+import android.content.Context;
+import android.os.UserManager;
+
+import android.preference.PreferenceManager;
+
+import com.android.settings.R;
+import com.android.settings.SettingsPreferenceFragment;
+import com.android.settings.Utils;
+import com.android.settings.rr.SeekBarPreference;
+
+import com.android.internal.logging.MetricsProto.MetricsEvent;
+
+public class ScreenStateToggles extends SettingsPreferenceFragment implements Preference.OnPreferenceChangeListener {
+
+    private static final String TAG = "ScreenStateToggles";
+    private static final String SCREEN_STATE_TOOGLES_ENABLE = "screen_state_toggles_enable_key";
+    private static final String SCREEN_STATE_TOOGLES_TWOG = "screen_state_toggles_twog";
+    private static final String SCREEN_STATE_TOOGLES_GPS = "screen_state_toggles_gps";
+    private static final String SCREEN_STATE_TOOGLES_MOBILE_DATA = "screen_state_toggles_mobile_data";
+    private static final String SCREEN_STATE_ON_DELAY = "screen_state_on_delay";
+    private static final String SCREEN_STATE_OFF_DELAY = "screen_state_off_delay";
+    private static final String SCREEN_STATE_CATGEGORY_LOCATION = "screen_state_toggles_location_key";
+    private static final String SCREEN_STATE_CATGEGORY_MOBILE_DATA = "screen_state_toggles_mobile_key";
+    private static final String SCREEN_STATE_TOOGLES_WIFI = "screen_state_toggles_wifi";
+    private static final String SCREEN_STATE_CATGEGORY_WIFI = "screen_state_toggles_wifi_key";
+
+    private Context mContext;
+
+    private SwitchPreference mEnableScreenStateToggles;
+    private SwitchPreference mEnableScreenStateTogglesTwoG;
+    private SwitchPreference mEnableScreenStateTogglesGps;
+    private SwitchPreference mEnableScreenStateTogglesMobileData;
+    private SwitchPreference mEnableScreenStateTogglesWifi;
+    private SeekBarPreference mSecondsOffDelay;
+    private SeekBarPreference mSecondsOnDelay;
+    private PreferenceCategory mMobileDateCategory;
+    private PreferenceCategory mLocationCategory;
+    private PreferenceCategory mWifiCategory;
+
+    @Override
+    protected int getMetricsCategory() {
+        return MetricsEvent.RESURRECTED;
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        mContext = (Context) getActivity();
+
+        addPreferencesFromResource(R.xml.rr_screen_state_toggles);
+        PreferenceScreen prefSet = getPreferenceScreen();
+
+        mEnableScreenStateToggles = (SwitchPreference) findPreference(
+                SCREEN_STATE_TOOGLES_ENABLE);
+
+        int enabled = Settings.System.getInt(getActivity().getContentResolver(), Settings.System.START_SCREEN_STATE_SERVICE, 0);
+
+        mEnableScreenStateToggles.setChecked(enabled != 0);
+        mEnableScreenStateToggles.setOnPreferenceChangeListener(this);
+
+        mSecondsOffDelay = (SeekBarPreference) findPreference(SCREEN_STATE_OFF_DELAY);
+        int offd = Settings.System.getInt(getContentResolver(),
+                Settings.System.SCREEN_STATE_OFF_DELAY, 0);
+        mSecondsOffDelay.setValue(offd / 1);
+        mSecondsOffDelay.setOnPreferenceChangeListener(this);
+
+        mSecondsOnDelay = (SeekBarPreference) findPreference(SCREEN_STATE_ON_DELAY);
+        int ond = Settings.System.getInt(getContentResolver(),
+                Settings.System.SCREEN_STATE_ON_DELAY, 0);
+        mSecondsOnDelay.setValue(ond / 1);
+        mSecondsOnDelay.setOnPreferenceChangeListener(this);
+
+        mMobileDateCategory = (PreferenceCategory) findPreference(
+                SCREEN_STATE_CATGEGORY_MOBILE_DATA);
+        mLocationCategory = (PreferenceCategory) findPreference(
+                SCREEN_STATE_CATGEGORY_LOCATION);
+        mWifiCategory = (PreferenceCategory) findPreference(
+                SCREEN_STATE_CATGEGORY_WIFI);
+
+        mEnableScreenStateTogglesTwoG = (SwitchPreference) findPreference(
+                SCREEN_STATE_TOOGLES_TWOG);
+
+        ConnectivityManager cm = (ConnectivityManager) mContext.getSystemService(Context.CONNECTIVITY_SERVICE);
+
+        if (!cm.isNetworkSupported(ConnectivityManager.TYPE_MOBILE)){
+            getPreferenceScreen().removePreference(mEnableScreenStateTogglesTwoG);
+        } else {
+            mEnableScreenStateTogglesTwoG.setChecked((
+                Settings.System.getInt(getActivity().getContentResolver(), Settings.System.SCREEN_STATE_TWOG, 0) == 1));
+            mEnableScreenStateTogglesTwoG.setOnPreferenceChangeListener(this);
+        }
+
+        mEnableScreenStateTogglesMobileData = (SwitchPreference) findPreference(
+                SCREEN_STATE_TOOGLES_MOBILE_DATA);
+
+        if (!cm.isNetworkSupported(ConnectivityManager.TYPE_MOBILE)){
+            getPreferenceScreen().removePreference(mEnableScreenStateTogglesMobileData);
+        } else {
+            mEnableScreenStateTogglesMobileData.setChecked((
+                Settings.System.getInt(getActivity().getContentResolver(), Settings.System.SCREEN_STATE_MOBILE_DATA, 0) == 1));
+            mEnableScreenStateTogglesMobileData.setOnPreferenceChangeListener(this);
+        }
+        mEnableScreenStateTogglesWifi = (SwitchPreference) findPreference(
+                SCREEN_STATE_TOOGLES_WIFI);
+        mEnableScreenStateTogglesWifi.setChecked((
+                Settings.System.getInt(getActivity().getContentResolver(), Settings.System.SCREEN_STATE_WIFI, 0) == 1));
+        mEnableScreenStateTogglesWifi.setOnPreferenceChangeListener(this);
+
+        // Only enable these controls if this user is allowed to change location
+        // sharing settings.
+        final UserManager um = (UserManager) getActivity().getSystemService(Context.USER_SERVICE);
+        boolean isLocationChangeAllowed = !um.hasUserRestriction(UserManager.DISALLOW_SHARE_LOCATION);
+
+        // TODO: check if gps is available on this device?
+        mEnableScreenStateTogglesGps = (SwitchPreference) findPreference(
+                SCREEN_STATE_TOOGLES_GPS);
+
+        if (!isLocationChangeAllowed){
+            getPreferenceScreen().removePreference(mEnableScreenStateTogglesGps);
+            mEnableScreenStateTogglesGps = null;
+        } else {
+            mEnableScreenStateTogglesGps.setChecked((
+                Settings.System.getInt(getActivity().getContentResolver(), Settings.System.SCREEN_STATE_GPS, 0) == 1));
+            mEnableScreenStateTogglesGps.setOnPreferenceChangeListener(this);
+        }
+
+        mMobileDateCategory.setEnabled(enabled != 0);
+        mLocationCategory.setEnabled(enabled != 0);
+        mWifiCategory.setEnabled(enabled != 0);
+    }
+
+    @Override
+    public boolean onPreferenceChange(Preference preference, Object newValue) {
+        ContentResolver resolver = getActivity().getContentResolver();
+
+        if (preference == mEnableScreenStateToggles) {
+            boolean value = (Boolean) newValue;
+            Settings.System.putInt(resolver,
+                    Settings.System.START_SCREEN_STATE_SERVICE, value ? 1 : 0);
+
+            Intent service = (new Intent())
+                .setClassName("com.android.systemui", "com.android.systemui.screenstate.ScreenStateService");
+            if (value) {
+                getActivity().stopService(service);
+                getActivity().startService(service);
+            } else {
+                getActivity().stopService(service);
+            }
+
+            mMobileDateCategory.setEnabled(value);
+            mLocationCategory.setEnabled(value);
+            mWifiCategory.setEnabled(value);
+
+            return true;
+        } else if (preference == mEnableScreenStateTogglesTwoG) {
+            boolean value = (Boolean) newValue;
+            Settings.System.putInt(resolver,
+                    Settings.System.SCREEN_STATE_TWOG, value ? 1 : 0);
+
+            Intent intent = new Intent("android.intent.action.SCREEN_STATE_SERVICE_UPDATE");
+            mContext.sendBroadcast(intent);
+
+            return true;
+        } else if (preference == mEnableScreenStateTogglesGps) {
+            boolean value = (Boolean) newValue;
+            Settings.System.putInt(resolver,
+                    Settings.System.SCREEN_STATE_GPS, value ? 1 : 0);
+
+            Intent intent = new Intent("android.intent.action.SCREEN_STATE_SERVICE_UPDATE");
+            mContext.sendBroadcast(intent);
+
+            return true;
+        } else if (preference == mEnableScreenStateTogglesMobileData) {
+            boolean value = (Boolean) newValue;
+            Settings.System.putInt(resolver,
+                    Settings.System.SCREEN_STATE_MOBILE_DATA, value ? 1 : 0);
+
+            Intent intent = new Intent("android.intent.action.SCREEN_STATE_SERVICE_UPDATE");
+            mContext.sendBroadcast(intent);
+
+            return true;
+        } else if (preference == mEnableScreenStateTogglesWifi) {
+            boolean value = (Boolean) newValue;
+            Settings.System.putInt(resolver,
+                    Settings.System.SCREEN_STATE_WIFI, value ? 1 : 0);
+
+            Intent intent = new Intent("android.intent.action.SCREEN_STATE_SERVICE_UPDATE");
+            mContext.sendBroadcast(intent);
+            return true;
+        } else if (preference == mSecondsOffDelay) {
+            int delay = (Integer) newValue;
+            Settings.System.putInt(getActivity().getContentResolver(),
+                    Settings.System.SCREEN_STATE_OFF_DELAY, delay);
+
+            return true;
+        } else if (preference == mSecondsOnDelay) {
+            int delay = (Integer) newValue;
+            Settings.System.putInt(getActivity().getContentResolver(),
+                    Settings.System.SCREEN_STATE_ON_DELAY, delay);
+
+            return true;
+        }
+
+        return false;
+    }
+
+    private void restartService(){
+        Intent service = (new Intent())
+                .setClassName("com.android.systemui", "com.android.systemui.screenstate.ScreenStateService");
+        getActivity().stopService(service);
+        getActivity().startService(service);
+    }
+}
-- 
1.9.3 (Apple Git-50)

